{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nimport * as i2 from \"../services/storage.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/forms\";\nfunction LoginFormComponent_form_0_div_6_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtext(1, \" Username is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginFormComponent_form_0_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, LoginFormComponent_form_0_div_6_div_1_Template, 2, 0, \"div\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r3 = i0.ɵɵreference(5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r3.errors[\"required\"]);\n  }\n}\nfunction LoginFormComponent_form_0_div_11_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtext(1, \" Password is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginFormComponent_form_0_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, LoginFormComponent_form_0_div_11_div_1_Template, 2, 0, \"div\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r5 = i0.ɵɵreference(10);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r5.errors[\"required\"]);\n  }\n}\nfunction LoginFormComponent_form_0_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Login failed: \", ctx_r7.errorMessage, \" \");\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nfunction LoginFormComponent_form_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 2, 3);\n    i0.ɵɵlistener(\"ngSubmit\", function LoginFormComponent_form_0_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const _r2 = i0.ɵɵreference(1);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(_r2.form.valid && ctx_r10.onSubmit());\n    });\n    i0.ɵɵelementStart(2, \"div\", 4)(3, \"div\", 5)(4, \"input\", 6, 7);\n    i0.ɵɵlistener(\"ngModelChange\", function LoginFormComponent_form_0_Template_input_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.form.username = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(6, LoginFormComponent_form_0_div_6_Template, 2, 1, \"div\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 4)(8, \"div\", 5)(9, \"input\", 9, 10);\n    i0.ɵɵlistener(\"ngModelChange\", function LoginFormComponent_form_0_Template_input_ngModelChange_9_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.form.password = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(11, LoginFormComponent_form_0_div_11_Template, 2, 1, \"div\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\", 11)(13, \"a\", 12);\n    i0.ɵɵtext(14, \"No username or Password?\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"div\", 13)(16, \"button\", 14);\n    i0.ɵɵtext(17, \"sign in\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(18, \"div\", 15);\n    i0.ɵɵtemplate(19, LoginFormComponent_form_0_div_19_Template, 2, 1, \"div\", 16);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const _r2 = i0.ɵɵreference(1);\n    const _r3 = i0.ɵɵreference(5);\n    const _r5 = i0.ɵɵreference(10);\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.form.username)(\"ngClass\", i0.ɵɵpureFunction1(7, _c0, _r2.submitted && _r3.errors));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", _r3.errors && _r2.submitted);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.form.password)(\"ngClass\", i0.ɵɵpureFunction1(9, _c0, _r2.submitted && _r5.errors));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", _r5.errors && _r2.submitted);\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngIf\", _r2.submitted && ctx_r0.isLoginFailed);\n  }\n}\nfunction LoginFormComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \" Logged in!\\n\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class LoginFormComponent {\n  constructor(authService, storageService) {\n    this.authService = authService;\n    this.storageService = storageService;\n    this.form = {\n      username: null,\n      password: null\n    };\n    this.isLoggedIn = false;\n    this.isLoginFailed = false;\n    this.errorMessage = '';\n  }\n  ngOnInit() {\n    if (this.storageService.isLoggedIn()) {\n      this.isLoggedIn = true;\n    }\n  }\n  reloadPage() {\n    window.location.reload();\n  }\n  onSubmit() {\n    console.log(\"On submit\");\n    const {\n      username,\n      password\n    } = this.form;\n    this.authService.login(username, password).subscribe({\n      next: data => {\n        this.storageService.saveUser(data);\n        this.isLoginFailed = false;\n        this.isLoggedIn = true;\n        this.reloadPage();\n      },\n      error: err => {\n        this.errorMessage = err.error.message;\n        this.isLoginFailed = true;\n      }\n    });\n  }\n}\nLoginFormComponent.ɵfac = function LoginFormComponent_Factory(t) {\n  return new (t || LoginFormComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.StorageService));\n};\nLoginFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginFormComponent,\n  selectors: [[\"LoginForm\"]],\n  decls: 2,\n  vars: 2,\n  consts: [[\"class\", \"sm:w-2/3 w-full px-4 lg:px-0 mx-auto\", \"name\", \"form\", \"novalidate\", \"\", 3, \"ngSubmit\", 4, \"ngIf\"], [\"class\", \"mt-4 text-white lg:text-AQ-title\", 4, \"ngIf\"], [\"name\", \"form\", \"novalidate\", \"\", 1, \"sm:w-2/3\", \"w-full\", \"px-4\", \"lg:px-0\", \"mx-auto\", 3, \"ngSubmit\"], [\"f\", \"ngForm\"], [1, \"form-control\"], [1, \"pb-2\", \"pt-4\"], [\"type\", \"text\", \"name\", \"username\", \"required\", \"\", \"placeholder\", \"User name\", 1, \"text-AQ-title\", \"block\", \"w-full\", \"p-4\", \"text-lg\", \"rounded-sm\", \"bg-gray-100\", \"hover:border\", \"hover:border-AQ-title\", 3, \"ngModel\", \"ngClass\", \"ngModelChange\"], [\"username\", \"ngModel\"], [4, \"ngIf\"], [\"type\", \"password\", \"name\", \"password\", \"required\", \"\", \"placeholder\", \"Contrase\\u00F1a\", 1, \"text-AQ-title\", \"block\", \"w-full\", \"p-4\", \"text-lg\", \"rounded-sm\", \"bg-gray-100\", \"hover:border\", \"hover:border-AQ-title\", 3, \"ngModel\", \"ngClass\", \"ngModelChange\"], [\"password\", \"ngModel\"], [1, \"text-right\", \"text-gray-400\", \"hover:underline\", \"hover:text-gray-100\"], [\"routerLink\", \"/signup\", 1, \"text-white\", \"lg:text-AQ-title\", \"hover:text-[#db4040]\"], [1, \"px-4\", \"pb-2\", \"pt-4\"], [1, \"uppercase\", \"block\", \"w-full\", \"p-4\", \"text-lg\", \"rounded-full\", \"bg-AQ-title\", \"hover:bg-[#db4040]\", \"focus:outline-none\"], [1, \"form-group\"], [\"class\", \"text-white lg:text-AQ-title hover:text-[#db4040]\", 4, \"ngIf\"], [\"class\", \"text-AQ-title\", 4, \"ngIf\"], [1, \"text-AQ-title\"], [1, \"text-white\", \"lg:text-AQ-title\", \"hover:text-[#db4040]\"], [1, \"mt-4\", \"text-white\", \"lg:text-AQ-title\"]],\n  template: function LoginFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, LoginFormComponent_form_0_Template, 20, 11, \"form\", 0);\n      i0.ɵɵtemplate(1, LoginFormComponent_div_1_Template, 2, 0, \"div\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", !ctx.isLoggedIn);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isLoggedIn);\n    }\n  },\n  dependencies: [i3.NgClass, i3.NgIf, i4.RouterLink, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.NgModel, i5.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsb2dpbi1mb3JtLmNvbXBvbmVudC5jc3MifQ== */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4tZm9ybS9sb2dpbi1mb3JtLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLHdLQUF3SyIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;;IAsBMA,+BAA+D;IAC7DA,sCACF;IAAAA,iBAAM;;;;;IAHRA,2BAA4C;IAC1CA,iFAEM;IACRA,iBAAM;;;;;IAHwBA,eAAiC;IAAjCA,6CAAiC;;;;;IAoB7DA,+BAA+D;IAC7DA,sCACF;IAAAA,iBAAM;;;;;IAHRA,2BAA4C;IAC1CA,kFAEM;IACRA,iBAAM;;;;;IAHwBA,eAAiC;IAAjCA,6CAAiC;;;;;IAY/DA,+BAAmG;IACjGA,YACF;IAAAA,iBAAM;;;;IADJA,eACF;IADEA,kEACF;;;;;;;;;;;IAxDJA,kCAOC;IAHCA;MAAAA;MAAA;MAAA;MAAA,OAAYA,iCAAgBC,kBAAU;IAAA,EAAC;IAIvCD,8BAA0B;IAMlBA;MAAAA;MAAA;MAAA,OAAaA,8CACjB;IAAA,EAD+B;IAJ7BA,iBASE;IAENA,0EAIM;IACRA,iBAAM;IAENA,8BAA0B;IAMpBA;MAAAA;MAAA;MAAA,OAAaA,8CACf;IAAA,EAD6B;IAJ7BA,iBASE;IAEJA,4EAIM;IACRA,iBAAM;IACNA,gCAA0E;IACWA,yCAAwB;IAAAA,iBAAI;IAEjHA,gCAA4B;IAC0FA,wBAAO;IAAAA,iBAAS;IAEtIA,gCAAwB;IACtBA,6EAEM;IACRA,iBAAM;;;;;;;IA3CEA,eAA2B;IAA3BA,8CAA2B;IAO3BA,eAAoC;IAApCA,kDAAoC;IAatCA,eAA2B;IAA3BA,8CAA2B;IAOzBA,eAAoC;IAApCA,kDAAoC;IAaqBA,eAAkC;IAAlCA,4DAAkC;;;;;IAKrGA,+BAAiE;IAC/DA,6BACF;IAAAA,iBAAM;;;ACpDN,OAAM,MAAOE,kBAAkB;EAU7BC,YAAoBC,WAAwB,EAAUC,cAA8B;IAAhE,gBAAW,GAAXD,WAAW;IAAuB,mBAAc,GAAdC,cAAc;IARpE,SAAI,GAAQ;MACVC,QAAQ,EAAE,IAAI;MACdC,QAAQ,EAAE;KACX;IACD,eAAU,GAAG,KAAK;IAClB,kBAAa,GAAG,KAAK;IACrB,iBAAY,GAAG,EAAE;EAEuE;EAExFC,QAAQ;IACN,IAAI,IAAI,CAACH,cAAc,CAACI,UAAU,EAAE,EAAE;MACpC,IAAI,CAACA,UAAU,GAAG,IAAI;;EAE1B;EAEAC,UAAU;IACRC,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;EAC1B;EAEAC,QAAQ;IACNC,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IACxB,MAAM;MAAEV,QAAQ;MAAEC;IAAQ,CAAE,GAAG,IAAI,CAACU,IAAI;IAExC,IAAI,CAACb,WAAW,CAACc,KAAK,CAACZ,QAAQ,EAAEC,QAAQ,CAAC,CAACY,SAAS,CAAC;MACnDC,IAAI,EAAEC,IAAI,IAAG;QACX,IAAI,CAAChB,cAAc,CAACiB,QAAQ,CAACD,IAAI,CAAC;QAClC,IAAI,CAACE,aAAa,GAAG,KAAK;QAC1B,IAAI,CAACd,UAAU,GAAG,IAAI;QACtB,IAAI,CAACC,UAAU,EAAE;MACnB,CAAC;MACDc,KAAK,EAAEC,GAAG,IAAG;QACX,IAAI,CAACC,YAAY,GAAGD,GAAG,CAACD,KAAK,CAACG,OAAO;QACrC,IAAI,CAACJ,aAAa,GAAG,IAAI;MAC3B;KACD,CAAC;EACJ;;AAtCWrB,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAA0B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDT/BhC,uEA0DO;MACPA,mEAEM;;;MA3DHA,sCAAiB;MAyD2BA,eAAgB;MAAhBA,qCAAgB","names":["i0","ctx_r10","LoginFormComponent","constructor","authService","storageService","username","password","ngOnInit","isLoggedIn","reloadPage","window","location","reload","onSubmit","console","log","form","login","subscribe","next","data","saveUser","isLoginFailed","error","err","errorMessage","message","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\GABO\\Desktop\\ProyectoFinalAngular\\aq-char-helper\\src\\app\\login-form\\login-form.component.html","C:\\Users\\GABO\\Desktop\\ProyectoFinalAngular\\aq-char-helper\\src\\app\\login-form\\login-form.component.ts"],"sourcesContent":["<form \n  class=\"sm:w-2/3 w-full px-4 lg:px-0 mx-auto\"\n  *ngIf=\"!isLoggedIn\"\n  name=\"form\"\n  (ngSubmit)=\"f.form.valid && onSubmit()\"\n  #f=\"ngForm\"\n  novalidate\n>\n  <div class=\"form-control\">\n    <div class=\"pb-2 pt-4\">\n        <input \n          type=\"text\" \n          class=\"text-AQ-title block w-full p-4 text-lg rounded-sm bg-gray-100 hover:border hover:border-AQ-title\"\n          name=\"username\"\n          [(ngModel)]=\"form.username\"\n          required\n          #username=\"ngModel\"\n          [ngClass]=\"{ 'is-invalid': f.submitted && username.errors }\"\n          placeholder=\"User name\"\n        />\n    </div>\n    <div *ngIf=\"username.errors && f.submitted\">\n      <div class=\"text-AQ-title\" *ngIf=\"username.errors['required']\">\n        Username is required\n      </div>\n    </div>\n  </div>\n\n  <div class=\"form-control\">\n    <div class=\"pb-2 pt-4\">\n      <input \n        class=\"text-AQ-title block w-full p-4 text-lg rounded-sm bg-gray-100 hover:border hover:border-AQ-title\"\n        type=\"password\"\n        name=\"password\"\n        [(ngModel)]=\"form.password\"\n        required\n        #password=\"ngModel\"\n        [ngClass]=\"{ 'is-invalid': f.submitted && password.errors }\"\n        placeholder=\"Contraseña\" \n      />\n    </div>\n    <div *ngIf=\"password.errors && f.submitted\">\n      <div class=\"text-AQ-title\" *ngIf=\"password.errors['required']\">\n        Password is required\n      </div>\n    </div>\n  </div>\n  <div class=\"text-right text-gray-400 hover:underline hover:text-gray-100\">\n      <a routerLink=\"/signup\" class=\"text-white lg:text-AQ-title hover:text-[#db4040]\">No username or Password?</a>\n  </div>\n  <div class=\"px-4 pb-2 pt-4\">\n      <button class=\"uppercase block w-full p-4 text-lg rounded-full bg-AQ-title hover:bg-[#db4040] focus:outline-none\">sign in</button>\n  </div>\n  <div class=\"form-group\">\n    <div class=\"text-white lg:text-AQ-title hover:text-[#db4040]\" *ngIf=\"f.submitted && isLoginFailed\">\n      Login failed: {{ errorMessage }}\n    </div>      \n  </div>\n</form>\n<div class=\"mt-4 text-white lg:text-AQ-title\" *ngIf=\"isLoggedIn\">\n  Logged in!\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport { StorageService } from '../services/storage.service';\n\n@Component({\n  selector: 'LoginForm',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.css']\n})\nexport class LoginFormComponent \n{\n  form: any = {\n    username: null,\n    password: null\n  };\n  isLoggedIn = false;\n  isLoginFailed = false;\n  errorMessage = '';\n\n  constructor(private authService: AuthService, private storageService: StorageService) { }\n\n  ngOnInit(): void {\n    if (this.storageService.isLoggedIn()) {\n      this.isLoggedIn = true;\n    }\n  }\n\n  reloadPage(): void {\n    window.location.reload();\n  }\n\n  onSubmit(): void {\n    console.log(\"On submit\")\n    const { username, password } = this.form;\n\n    this.authService.login(username, password).subscribe({\n      next: data => {\n        this.storageService.saveUser(data);\n        this.isLoginFailed = false;\n        this.isLoggedIn = true;\n        this.reloadPage();\n      },\n      error: err => {\n        this.errorMessage = err.error.message;\n        this.isLoginFailed = true;\n      }\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}