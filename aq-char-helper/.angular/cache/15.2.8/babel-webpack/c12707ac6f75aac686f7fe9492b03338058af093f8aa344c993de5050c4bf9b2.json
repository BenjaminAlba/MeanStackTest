{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst baseUrl = 'http://localhost:8080/api/Characters';\nexport class CharacterService {\n  constructor(http) {\n    this.http = http;\n  }\n  getAll() {\n    return this.http.get(baseUrl);\n  }\n  get(id) {\n    return this.http.get(`${baseUrl}/${id}`);\n  }\n  create(data) {\n    return this.http.post(baseUrl, data);\n  }\n  update(id, data) {\n    return this.http.put(`${baseUrl}/${id}`, data);\n  }\n  delete(id) {\n    return this.http.delete(`${baseUrl}/${id}`);\n  }\n  deleteAll() {\n    return this.http.delete(baseUrl);\n  }\n  findByAuthor(author) {\n    return this.http.get(`${baseUrl}?author=${author}`);\n  }\n}\nCharacterService.ɵfac = function CharacterService_Factory(t) {\n  return new (t || CharacterService)(i0.ɵɵinject(i1.HttpClient));\n};\nCharacterService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CharacterService,\n  factory: CharacterService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAKA,MAAMA,OAAO,GAAG,sCAAsC;AAKtD,OAAM,MAAOC,gBAAgB;EAE3BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAExCC,MAAM;IACJ,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAcL,OAAO,CAAC;EAC5C;EAEAK,GAAG,CAACC,EAAO;IACT,OAAO,IAAI,CAACH,IAAI,CAACE,GAAG,CAAC,GAAGL,OAAO,IAAIM,EAAE,EAAE,CAAC;EAC1C;EAEAC,MAAM,CAACC,IAAS;IACd,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAACT,OAAO,EAAEQ,IAAI,CAAC;EACtC;EAEAE,MAAM,CAACJ,EAAO,EAAEE,IAAS;IACvB,OAAO,IAAI,CAACL,IAAI,CAACQ,GAAG,CAAC,GAAGX,OAAO,IAAIM,EAAE,EAAE,EAAEE,IAAI,CAAC;EAChD;EAEAI,MAAM,CAACN,EAAO;IACZ,OAAO,IAAI,CAACH,IAAI,CAACS,MAAM,CAAC,GAAGZ,OAAO,IAAIM,EAAE,EAAE,CAAC;EAC7C;EAEAO,SAAS;IACP,OAAO,IAAI,CAACV,IAAI,CAACS,MAAM,CAACZ,OAAO,CAAC;EAClC;EAEAc,YAAY,CAACC,MAAW;IACtB,OAAO,IAAI,CAACZ,IAAI,CAACE,GAAG,CAAc,GAAGL,OAAO,WAAWe,MAAM,EAAE,CAAC;EAClE;;AA9BWd,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;SAAhBA,gBAAgB;EAAAe,SAAhBf,gBAAgB;EAAAgB,YAFf;AAAM","names":["baseUrl","CharacterService","constructor","http","getAll","get","id","create","data","post","update","put","delete","deleteAll","findByAuthor","author","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\GABO\\Desktop\\ProyectoFinalAngular\\aq-char-helper\\src\\app\\services\\character.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Character } from '../models/character.model';\n\nconst baseUrl = 'http://localhost:8080/api/Characters';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CharacterService {\n\n  constructor(private http: HttpClient) { }\n\n  getAll(): Observable<Character[]> {\n    return this.http.get<Character[]>(baseUrl);\n  }\n\n  get(id: any): Observable<Character> {\n    return this.http.get(`${baseUrl}/${id}`);\n  }\n\n  create(data: any): Observable<any> {\n    return this.http.post(baseUrl, data);\n  }\n\n  update(id: any, data: any): Observable<any> {\n    return this.http.put(`${baseUrl}/${id}`, data);\n  }\n\n  delete(id: any): Observable<any> {\n    return this.http.delete(`${baseUrl}/${id}`);\n  }\n\n  deleteAll(): Observable<any> {\n    return this.http.delete(baseUrl);\n  }\n\n  findByAuthor(author: any): Observable<Character[]> {\n    return this.http.get<Character[]>(`${baseUrl}?author=${author}`);\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}